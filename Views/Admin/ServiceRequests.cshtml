@model IEnumerable<RequestWithUser>
@{
    ViewData["Title"] = "Service Requests";
    ViewData["HideNavbar"] = true;
    ViewData["HideFooter"] = true;
    Layout = "~/Views/Shared/_Layout.cshtml";
    int currentPage = ViewBag.CurrentPage ?? 1;
    int totalPages = ViewBag.TotalPages ?? 1;
    int pageSize = ViewBag.PageSize ?? 5;
}

@Html.Partial("_Navbar")

<link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;600&display=swap" rel="stylesheet" />
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css">

<style>
    body {
        font-family: 'Inter', sans-serif;
        background-color: #f9f9f9;
    }

    .page-title {
        font-weight: 700;
        font-size: 2.5rem;
        margin-bottom: 30px;
    }

    .feature-buttons {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 30px;
    }

        .feature-buttons a {
            font-weight: 500;
            font-size: 0.9rem;
            padding: 8px 16px;
            border-radius: 8px;
            text-decoration: none;
            border: 1px solid #000;
            color: #000;
            transition: all 0.2s ease;
            background-color: transparent;
        }

            .feature-buttons a:hover {
                background-color: #000;
                color: #fff;
            }

    table {
        width: 100%;
        border-collapse: collapse;
        background: #fff;
        border-radius: 12px;
        overflow: hidden;
    }

    th, td {
        padding: 12px;
        text-align: left;
        font-size: 0.9rem;
        border-bottom: 1px solid #eee;
        color: #000;
    }

    .badge {
        padding: 4px 12px;
        border-radius: 999px;
        font-size: 0.75rem;
        font-weight: 500;
        border: 1px solid #aaa;
        background: transparent;
        color: #000;
    }

    .badge-approved {
        color: #198754;
        border-color: #198754;
    }

    .badge-denied {
        color: #dc3545;
        border-color: #dc3545;
    }

    .action-buttons form {
        display: inline-block;
    }

    .action-buttons button {
        padding: 4px 10px;
        border-radius: 20px;
        font-size: 0.8rem;
        border: none;
        cursor: pointer;
        background-color: black;
        color: #fff;
        display: inline-flex;
        align-items: center;
        margin-right: 4px;
    }

        .action-buttons button i {
            margin-right: 6px;
        }

    .pagination-controls {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-top: 25px;
        flex-wrap: wrap;
    }

    .pagination .page-link {
        padding: 4px 12px;
        border-radius: 5px;
        border: 1px solid #ccc;
        color: #000;
        margin: 0 3px;
        text-decoration: none;
        font-size: 0.85rem;
    }

    .pagination .active .page-link {
        background-color: #000;
        color: #fff;
        border-color: #000;
    }

    .rows-dropdown {
        font-size: 0.85rem !important;
    }
</style>

<div class="container py-5">
    <div class="feature-buttons">
        <h1 class="page-title mb-0">Service Requests</h1>
        <a href="@Url.Action("AdminDashboard", "Home")">← Back</a>
    </div>

    <table>
        <thead>
            <tr>
                <th>ID</th>
                <th>Type</th>
                <th>Name</th>
                <th>Status</th>
                <th>Date</th>
                <th>Action</th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Any())
            {
                int index = (currentPage - 1) * pageSize;
                foreach (var req in Model)
                {
                    var statusClass = req.Status?.ToLower() switch
                    {
                        "approved" => "badge badge-approved",
                        "denied" => "badge badge-denied",
                        _ => "badge"
                    };
                    <tr>
                        <td>@(++index)</td>
                        <td>@(req.RequestType ?? "---")</td>
                        <td>@req.UserName</td>
                        <td><span class="@statusClass">@(req.Status ?? "Pending")</span></td>
                        <td>@req.DateSubmitted.ToString("yyyy-MM-dd")</td>
                        <td class="action-buttons">
                            @if (req.Status?.ToLower() == "pending")
                            {
                                <form method="post" asp-controller="Admin" asp-action="UpdateRequestStatus">
                                    <input type="hidden" name="id" value="@req.RequestId" />
                                    <button type="submit" name="status" value="Approved">
                                        <i class="bi bi-check-circle"></i> Approve
                                    </button>
                                    <button type="submit" name="status" value="Denied">
                                        <i class="bi bi-x-circle"></i> Deny
                                    </button>
                                </form>
                            }
                            else
                            {
                                <span class="text-muted">—</span>
                            }
                        </td>
                    </tr>
                }
            }
            else
            {
                <tr><td colspan="6" class="text-center">No service requests found.</td></tr>
            }
        </tbody>
    </table>

    <div class="pagination-controls mt-3">
        <form method="get" asp-controller="Admin" asp-action="ServiceRequests" class="d-flex align-items-center" style="font-size: 0.85rem;">
            <label class="me-2">Rows per page:</label>
            <select name="pageSize" class="rows-dropdown form-select form-select-sm w-auto" onchange="this.form.submit()">
                <option value="5" selected="@(pageSize == 5)">5</option>
                <option value="10" selected="@(pageSize == 10)">10</option>
                <option value="15" selected="@(pageSize == 15)">15</option>
            </select>
            <input type="hidden" name="page" value="@currentPage" />
        </form>

        <nav>
            <ul class="pagination pagination-sm mb-0">
                <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("ServiceRequests", new { page = currentPage - 1, pageSize = pageSize })">«</a>
                </li>
                @for (int i = 1; i <= totalPages; i++)
                {
                    <li class="page-item @(i == currentPage ? "active" : "")">
                        <a class="page-link" href="@Url.Action("ServiceRequests", new { page = i, pageSize = pageSize })">@i</a>
                    </li>
                }
                <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("ServiceRequests", new { page = currentPage + 1, pageSize = pageSize })">»</a>
                </li>
            </ul>
        </nav>
    </div>
</div>
