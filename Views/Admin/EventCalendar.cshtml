@using SkylineHOA.Models
@{
    ViewData["Title"] = "Event Calendar";
    Layout = "~/Views/Shared/_Layout.cshtml";

    var events = ViewBag.Events as List<Event> ?? new List<Event>();
    int selectedMonth = ViewBag.Month ?? DateTime.Now.Month;
    int selectedYear = ViewBag.Year ?? DateTime.Now.Year;

    var monthName = System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(selectedMonth);
}

@Html.Partial("_Navbar")

<div class="container py-5" style="font-family: 'Inter', sans-serif;">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <div>
            <h1 class="fw-bold mb-2" style="font-size: 2.5rem;">Event Calendar</h1>
 
        </div>
        <a href="/Home/AdminDashboard" class="btn btn-outline-dark rounded px-4">← Back</a>

    </div>

    <h4 class="fw-semibold mb-4">@monthName @selectedYear</h4>

    <div class="row g-4">
        <!-- Calendar -->
        <div class="col-md-9">
            <div class="border border-dark rounded p-4 mb-4">
                <div class="d-flex justify-content-between align-items-center mb-3">
                    <form method="get" asp-controller="Admin" asp-action="EventCalendar" class="d-flex align-items-center gap-2">
                        <select name="month" class="form-select form-select-sm" onchange="this.form.submit()">
                            @for (int m = 1; m <= 12; m++)
                            {
                                var selected = m == selectedMonth ? "selected" : "";
                                var monthText = System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(m);
                                @:<option value="@m" @selected>@monthText</option>
                            }
                        </select>
                        <select name="year" class="form-select form-select-sm" onchange="this.form.submit()">
                            @for (int y = DateTime.Now.Year - 5; y <= DateTime.Now.Year + 5; y++)
                            {
                                var selected = y == selectedYear ? "selected" : "";
                                @:<option value="@y" @selected>@y</option>
                            }
                        </select>
                    </form>
                    <button class="btn-outline-black" data-bs-toggle="modal" data-bs-target="#createEventModal">+ Create Event</button>
                </div>

                <!-- Calendar Grid -->
                <div class="calendar-grid text-center">
                    <div class="calendar-cell fw-bold">SUN</div>
                    <div class="calendar-cell fw-bold">MON</div>
                    <div class="calendar-cell fw-bold">TUE</div>
                    <div class="calendar-cell fw-bold">WED</div>
                    <div class="calendar-cell fw-bold">THU</div>
                    <div class="calendar-cell fw-bold">FRI</div>
                    <div class="calendar-cell fw-bold">SAT</div>

                    @{
                        var daysInMonth = DateTime.DaysInMonth(selectedYear, selectedMonth);
                        var startDay = new DateTime(selectedYear, selectedMonth, 1).DayOfWeek;
                        var blankDays = (int)startDay;
                    }

                    @for (int i = 0; i < blankDays; i++)
                    {
                        <div class="calendar-cell border bg-light"></div>
                    }

                    @for (int i = 1; i <= daysInMonth; i++)
                    {
                        var date = new DateTime(selectedYear, selectedMonth, i);
                        var matchingEvent = events.FirstOrDefault(e => e.Date.Date == date.Date);

                        <div class="calendar-cell border position-relative">
                            <div class="day-number">@i</div>
                            @if (matchingEvent != null)
                            {
                                <div class="event-title">@matchingEvent.Title</div>
                            }
                        </div>
                    }
                </div>
            </div>
        </div>

        <!-- Events Sidebar -->
<div class="col-md-3">
    <div class="border border-dark rounded p-3 d-flex flex-column" style="height: 885px;">
        <div class="d-flex justify-content-between align-items-center mb-3">
            <h5 class="fw-semibold mb-0">Events</h5>
            <a href="#" class="small text-decoration-none text-dark fw-medium" data-bs-toggle="modal" data-bs-target="#viewAllEventsModal">See more</a>
        </div>
        <div style="overflow-y: auto; overflow-x: hidden; flex-grow: 1;">
            @if (events.Any())
            {
                var monthEvents = events
                    .Where(e => e.Date.Month == selectedMonth && e.Date.Year == selectedYear)
                    .OrderBy(e => e.Date)
                    .Take(5)
                    .ToList();

                if (monthEvents.Any())
                {
                    foreach (var evt in monthEvents)
                    {
                        <div class="mb-3 pb-2 border-bottom">
                            <strong class="d-block">@evt.Title</strong>
                            <p class="mb-1 small"><strong>Date:</strong> @evt.Date.ToString("MMM dd, yyyy")</p>
                            <p class="mb-1 small"><strong>Time:</strong> @evt.StartTime - @evt.EndTime</p>
                            <p class="mb-1 small"><strong>Venue:</strong> @evt.Venue</p>
                            <p class="small text-muted">@evt.Description</p>
                            <div class="d-flex gap-2">
                                <button class="btn btn-sm btn-link text-black p-0" title="Edit" data-bs-toggle="modal" data-bs-target="#editEventModal" onclick="populateEditModal('@evt.Id', '@evt.Title', '@evt.Date.ToString("yyyy-MM-dd")', '@evt.StartTime', '@evt.EndTime', '@evt.Venue', '@evt.Description')">
                                    <i class="bi bi-pencil-square"></i>
                                </button>
                                <form method="post" asp-controller="Event" asp-action="Delete" onsubmit="return confirm('Are you sure you want to delete this event?');" style="display:inline;">
                                    @Html.AntiForgeryToken()
                                    <input type="hidden" name="id" value="@evt.Id" />
                                    <button type="submit" class="btn btn-sm btn-link text-danger p-0" title="Delete">
                                        <i class="bi bi-trash-fill"></i>
                                    </button>
                                </form>
                            </div>
                        </div>
                    }
                }
                else
                {
                    <p class="text-muted">No events for this month.</p>
                }
            }
            else
            {
                <p class="text-muted">No events posted.</p>
            }
        </div>
    </div>
</div>


<!-- Create Event Modal -->
<div class="modal fade" id="createEventModal" tabindex="-1" aria-labelledby="createEventLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content border-dark">
            <form method="post" asp-controller="Event" asp-action="Create">
                <div class="modal-header">
                    <h5 class="modal-title fw-semibold">Create Event</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">Event Title</label>
                        <input type="text" class="form-control" name="Title" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Date</label>
                        <input type="date" class="form-control" name="Date" required />
                    </div>
                    <div class="mb-3 row">
                        <div class="col">
                            <label class="form-label">Start Time</label>
                            <input type="time" class="form-control" name="StartTime" id="startTime" required />
                        </div>
                        <div class="col">
                            <label class="form-label">End Time</label>
                            <input type="time" class="form-control" name="EndTime" id="endTime" required />
                        </div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Duration</label>
                        <input type="text" class="form-control" id="duration" readonly placeholder="--" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Venue</label>
                        <input type="text" class="form-control" name="Venue" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Description</label>
                        <textarea class="form-control" name="Description" rows="3" required></textarea>
                    </div>
                </div>
                <div class="modal-footer border-0">
                    <button type="submit" class="btn-outline-black">Add Event</button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Edit Event Modal -->
<div class="modal fade" id="editEventModal" tabindex="-1" aria-labelledby="editEventLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content border-dark">
            <form method="post" asp-controller="Event" asp-action="Edit">
                <div class="modal-header">
                    <h5 class="modal-title fw-semibold">Edit Event</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
                </div>
                <div class="modal-body">
                    <input type="hidden" name="Id" id="editEventId" />

                    <div class="mb-3">
                        <label class="form-label">Event Title</label>
                        <input type="text" class="form-control" name="Title" id="editTitle" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Date</label>
                        <input type="date" class="form-control" name="Date" id="editDate" required />
                    </div>
                    <div class="mb-3 row">
                        <div class="col">
                            <label class="form-label">Start Time</label>
                            <input type="time" class="form-control" name="StartTime" id="editStartTime" required />
                        </div>
                        <div class="col">
                            <label class="form-label">End Time</label>
                            <input type="time" class="form-control" name="EndTime" id="editEndTime" required />
                        </div>
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Duration</label>
                        <input type="text" class="form-control" id="editDuration" readonly placeholder="--" />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Venue</label>
                        <input type="text" class="form-control" name="Venue" id="editVenue" required />
                    </div>
                    <div class="mb-3">
                        <label class="form-label">Description</label>
                        <textarea class="form-control" name="Description" id="editDescription" rows="3" required></textarea>
                    </div>
                </div>
                <div class="modal-footer border-0">
                    <button type="submit" class="btn-outline-black">Save Changes</button>
                </div>
            </form>
        </div>
    </div>
</div>
<!-- View All Events Modal -->
<div class="modal fade" id="viewAllEventsModal" tabindex="-1" aria-labelledby="viewAllEventsLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg modal-dialog-centered">
        <div class="modal-content border-dark">
            <div class="modal-header">
                <h5 class="modal-title fw-semibold" id="viewAllEventsLabel">All Events</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <div class="modal-body" style="max-height: 70vh; overflow-y: auto;">
                @if (events.Any())
                {
                    var groupedEvents = events
                        .OrderBy(e => e.Date.Year)
                        .ThenBy(e => e.Date.Month)
                        .GroupBy(e => new { e.Date.Year, e.Date.Month });

                    foreach (var monthGroup in groupedEvents)
                    {
                        var groupMonthName = System.Globalization.CultureInfo.CurrentCulture.DateTimeFormat.GetMonthName(monthGroup.Key.Month);

                        <div class="dashboard-style-box p-4 mb-4">
                            <h5 class="fw-bold mb-3">@groupMonthName @monthGroup.Key.Year</h5>

                            @foreach (var evt in monthGroup)
                            {
                                <div class="mb-3 pb-2 border-bottom">
                                    <strong class="d-block">@evt.Title</strong>
                                    <p class="mb-1 small"><strong>Date:</strong> @evt.Date.ToString("MMM dd, yyyy")</p>
                                    <p class="mb-1 small"><strong>Time:</strong> @evt.StartTime - @evt.EndTime</p>
                                    <p class="mb-1 small"><strong>Venue:</strong> @evt.Venue</p>
                                    <p class="small text-muted">@evt.Description</p>
                                </div>
                            }
                        </div>
                    }
                }
                else
                {
                    <p class="text-muted">No events available.</p>
                }
            </div>
        </div>
    </div>
</div>

<!-- Scripts -->
<script>
function calculateDuration(startInputId, endInputId, durationOutputId) {
    const start = document.getElementById(startInputId);
    const end = document.getElementById(endInputId);
    const duration = document.getElementById(durationOutputId);

    if (start.value && end.value) {
        const [sh, sm] = start.value.split(":").map(Number);
        const [eh, em] = end.value.split(":").map(Number);
        const startMin = sh * 60 + sm;
        const endMin = eh * 60 + em;
        const diff = endMin - startMin;

        if (diff > 0) {
            const hrs = Math.floor(diff / 60);
            const mins = diff % 60;
            duration.value = `${hrs > 0 ? hrs + ' hr ' : ''}${mins} min`;
        } else {
            duration.value = "Invalid time range";
        }
    } else {
        duration.value = "";
    }
}

function populateEditModal(id, title, date, startTime, endTime, venue, description) {
    document.getElementById('editEventId').value = id;
    document.getElementById('editTitle').value = title;
    document.getElementById('editDate').value = date;
    document.getElementById('editStartTime').value = startTime;
    document.getElementById('editEndTime').value = endTime;
    document.getElementById('editVenue').value = venue;
    document.getElementById('editDescription').value = description;
    calculateDuration('editStartTime', 'editEndTime', 'editDuration');
}

document.addEventListener("DOMContentLoaded", function () {
    ['startTime', 'endTime'].forEach(id => document.getElementById(id)?.addEventListener('change', () => calculateDuration('startTime', 'endTime', 'duration')));
    ['editStartTime', 'editEndTime'].forEach(id => document.getElementById(id)?.addEventListener('change', () => calculateDuration('editStartTime', 'editEndTime', 'editDuration')));
});
</script>

<!-- Styles -->
<style>
.calendar-grid {
    display: grid;
    grid-template-columns: repeat(7, 1fr);
    gap: 6px;
}
.calendar-cell {
    aspect-ratio: 1 / 1;
    padding: 8px;
    background-color: #fff;
    border-radius: 4px;
    position: relative;
}
.day-number {
    font-weight: 600;
    font-size: 14px;
    position: absolute;
    top: 6px;
    right: 8px;
}

.btn-outline-black {
    background-color: #fff;
    color: #000;
    border: 1px solid #000;
    border-radius: 8px;
    padding: 6px 10px;
    font-weight: 500;
    font-size: 13px;
    transition: all 0.2s ease;
}
.event-title {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    font-weight: 600;
    font-size: 0.8rem;
    text-align: center;
    color: #000;
    word-break: break-word;
    padding: 0 4px;
}
.dashboard-style-box {
    border: 1px solid #000;
    border-radius: 8px;
    background-color: #fff;
    padding: 20px;
}
.btn-outline-black:hover { background-color: #f1f1f1; }
.modal-header h5 { font-weight: 600; }
</style>
