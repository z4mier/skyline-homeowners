@model IEnumerable<SkylineHOA.Models.Bill>
@{
    ViewData["Title"] = "Bills and Payments";
    ViewData["HideNavbar"] = true;
    ViewData["HideFooter"] = true;
    Layout = "~/Views/Shared/_Layout.cshtml";

    int currentPage = ViewBag.CurrentPage ?? 1;
    int totalPages = ViewBag.TotalPages ?? 1;
    int pageSize = ViewBag.PageSize ?? 5;
}

@Html.Partial("_Navbar")

<style>
    body {
        font-family: 'Inter', sans-serif;
        background-color: #f9f9f9;
    }

    .page-title {
        font-weight: 700;
        font-size: 2.5rem;
        margin-bottom: 30px;
    }

    table {
        width: 100%;
        border-collapse: collapse;
        background: #fff;
        border-radius: 12px;
        overflow: hidden;
    }

    th, td {
        padding: 12px;
        text-align: left;
        font-size: 0.9rem;
        border-bottom: 1px solid #eee;
        color: #000;
    }

    .badge {
        padding: 4px 12px;
        border-radius: 999px;
        font-size: 0.75rem;
        font-weight: 500;
        border: 1px solid #aaa;
        background: transparent;
        color: #000;
    }

    .badge-approved {
        color: #198754;
        border-color: #198754;
    }

    .badge-denied {
        color: #dc3545;
        border-color: #dc3545;
    }

    .pagination-controls {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-top: 25px;
        flex-wrap: wrap;
    }

    .pagination .page-link {
        padding: 4px 12px;
        border-radius: 5px;
        border: 1px solid #ccc;
        color: #000;
        margin: 0 3px;
        text-decoration: none;
        font-size: 0.85rem;
    }

    .pagination .active .page-link {
        background-color: #000;
        color: #fff;
        border-color: #000;
    }

    .rows-dropdown {
        font-size: 0.85rem !important;
    }
</style>

<div class="container py-5">
    <div class="d-flex justify-content-between align-items-center mb-3">
        <h1 class="page-title mb-0">My Reservations</h1>
        <a href="@Url.Action("Dashboard", "Home")" class="btn btn-outline-dark">← Back</a>
    </div>

    <table>
        <thead>
            <tr>
                <th>ID</th>
                <th>Amenity</th>
                <th>Status</th>
                <th>Booking Date</th>
            </tr>
        </thead>
        <tbody>
            @if (Model != null && Model.Any())
            {
                int index = (currentPage - 1) * pageSize;
                foreach (var bill in Model)
                {
                    var statusClass = bill.Status switch
                    {
                        "Approved" => "badge badge-approved",
                        "Denied" => "badge badge-denied",
                        _ => "badge"
                    };
                    <tr>
                        <td>@(++index)</td>
                        <td>@bill.AmenityName</td>
                        <td><span class="@statusClass">@bill.Status</span></td>
                        <td>@bill.BookingDate.ToString("yyyy-MM-dd")</td>
                    </tr>
                }
            }
            else
            {
                <tr><td colspan="4" class="text-center">No bills found.</td></tr>
            }
        </tbody>
    </table>

    <div class="pagination-controls mt-3">
        <form method="get" asp-controller="Payment" asp-action="BillsAndPayments" class="d-flex align-items-center" style="font-size: 0.85rem;">
            <label class="me-2">Rows per page:</label>
            <select name="pageSize" class="rows-dropdown form-select form-select-sm w-auto" onchange="this.form.submit()">
                <option value="5" selected="@(pageSize == 5)">5</option>
                <option value="10" selected="@(pageSize == 10)">10</option>
                <option value="15" selected="@(pageSize == 15)">15</option>
            </select>
            <input type="hidden" name="page" value="@currentPage" />
        </form>

        <nav>
            <ul class="pagination pagination-sm mb-0">
                <li class="page-item @(currentPage == 1 ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("BillsAndPayments", "Payment", new { page = currentPage - 1, pageSize = pageSize })">«</a>
                </li>
                @for (int i = 1; i <= totalPages; i++)
                {
                    <li class="page-item @(i == currentPage ? "active" : "")">
                        <a class="page-link" href="@Url.Action("BillsAndPayments", "Payment", new { page = i, pageSize = pageSize })">@i</a>
                    </li>
                }
                <li class="page-item @(currentPage == totalPages ? "disabled" : "")">
                    <a class="page-link" href="@Url.Action("BillsAndPayments", "Payment", new { page = currentPage + 1, pageSize = pageSize })">»</a>
                </li>
            </ul>
        </nav>
    </div>
</div>
